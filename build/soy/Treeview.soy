{namespace Templates.Treeview}

/**
 * This renders the main element.
 */
{template .content}
	{delcall Treeview.nodes data="all" /}
{/template}

/**
 * @param id
 * @param nodes
 * @param? parentSurfaceId
 */
{template .nodes}
	{foreach $node in $nodes}
		{let $index: index($node) /}
		{delcall Treeview.node}
			{param id: $id /}
			{param node: $node /}
			{param surfaceId: isNonnull($parentSurfaceId) ? ($parentSurfaceId + '-' + $index) : $index /}
		{/delcall}
	{/foreach}
{/template}

/**
 * @param id
 * @param node
 * @param surfaceId
 */
{template .node}
	{if $node}
		<div class="treeview-node-wrapper{$node.expanded ? ' expanded' : ''}">
			<div class="treeview-node-main clearfix{$node.children ? ' hasChildren' : ''}" data-onclick="handleNodeClicked_">
				{if $node.children}
					<div class="treeview-node-toggler"></div>
				{/if}
				<span class="treeview-node-name">{$node.name}</span>
			</div>
			{if $node.children}
				{delcall Treeview.nodes}
					{param id: $id /}
					{param nodes: $node.children /}
					{param parentSurfaceId: $surfaceId /}
					{param surfaceId: $surfaceId + '-nodes' /}
				{/delcall}
			{/if}
		</div>
	{/if}
{/template}

/**
 * @param? elementContent
 * @param id
 * @param? surfaceId
 */
{deltemplate Treeview.nodes variant="'element'"}
	{let $elementId: ($id ? $id : '') + '-' + (isNonnull($surfaceId) ? $surfaceId : 'nodes') /}
	<ul id="{$elementId}" class="treeview-nodes">{$elementContent}</ul>
{/deltemplate}

/**
 * @param? elementContent
 * @param id
 * @param? surfaceId
 */
{deltemplate Treeview.node variant="'element'"}
	<li id="{$id}-{$surfaceId}" class="treeview-node">{$elementContent}</li>
{/deltemplate}

// The following templates were generated by gulp-metal.
// Please don't edit them by hand.

/**
 * @param? elementContent
 * @param? elementClasses
 * @param? id
 */
{deltemplate Treeview}
	{delcall Treeview variant="'element'"}
		{param elementClasses: $elementClasses /}
		{param elementContent kind="html"}
			{call .content data="all" /}
		{/param}
		{param id: $id /}
	{/delcall}
{/deltemplate}

/**
 * @param? elementContent
 * @param? elementClasses
 * @param? id
 */
{deltemplate Treeview variant="'element'"}
	<div id="{$id}" class="treeview component{$elementClasses ? ' ' + $elementClasses : ''}">
		{$elementContent}
	</div>
{/deltemplate}

/**
 * @param? elementContent
 * @param id
 * @param? surfaceId
 */
{deltemplate Treeview.nodes}
	{delcall Treeview.nodes variant="'element'"}
		{param elementContent kind="html"}
			{call .nodes data="all" /}
		{/param}
		{param id: $id /}
		{param surfaceId: $surfaceId /}
	{/delcall}
{/deltemplate}

/**
 * @param? elementContent
 * @param id
 * @param? surfaceId
 */
{deltemplate Treeview.node}
	{delcall Treeview.node variant="'element'"}
		{param elementContent kind="html"}
			{call .node data="all" /}
		{/param}
		{param id: $id /}
		{param surfaceId: $surfaceId /}
	{/delcall}
{/deltemplate}
